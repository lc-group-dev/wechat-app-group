<style lang="less">
.container {
  height: 100vh;
  background-color: #ededed;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { setStore } from 'wepy-redux'
import configStore from './store'
const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/start',
      'pages/index',
      'pages/cardPercent',
      'pages/board',
      'pages/my',
      'pages/bindLeetCode'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#ededed',
      navigationBarTitleText: 'leetcode卡',
      navigationBarTextStyle: 'black',
      enablePullDownRefresh: true,
      backgroundColor: '#ededed'
    },
    tabBar: {
      color: '#000000',
      selectedColor: ' #07a4f8',
      list: [
        {
          iconPath: 'assets/index_btn_0.png',
          selectedIconPath: 'assets/index_btn_1.png',
          pagePath: 'pages/index',
          text: '总榜单'
        },
        {
          iconPath: 'assets/card_percent_0.png',
          selectedIconPath: 'assets/card_percent_1.png',
          pagePath: 'pages/cardPercent',
          text: '打卡率'
        },
        {
          iconPath: 'assets/board_btn_0.png',
          selectedIconPath: 'assets/board_btn_1.png',
          pagePath: 'pages/board',
          text: '每日榜单'
        },
        {
          iconPath: 'assets/user_btn_0.png',
          selectedIconPath: 'assets/user_btn_1.png',
          pagePath: 'pages/my',
          text: '我'
        }
      ]
    }
  }

  globalData = {
    userInfo: null,
    token: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

}
</script>
